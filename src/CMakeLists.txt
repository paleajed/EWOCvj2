cmake_minimum_required(VERSION 3.17)
project(EWOCvj2)

set(CMAKE_CXX_STANDARD 20)
if (UNIX)
    set(CMAKE_INSTALL_PREFIX /usr)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O0")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0")
endif (UNIX)

ADD_DEFINITIONS(-D_AFXDLL -DNDEBUG)
SET(CMAKE_MFC_FLAG 2)

add_executable(EWOCvj2 WIN32
        bins.cpp
        bins.h
        box.h
        effect.h
        layer.h
        loopstation.cpp
        loopstation.h
        mixer.cpp
        node.cpp
        node.h
        osc.cpp
        program.cpp
        program.h
        start.cpp
        tinyfiledialogs.c
        tinyfiledialogs.h
        window.h
        retarget.h)

set(Boost_USE_STATIC_RUNTIME ON)
set(Boost_USE_STATIC_LIBS ON)

include_directories(.)

if (WIN32)
    include_directories(C:/source/include)
    include_directories(C:/source/rtmidi-5.0.0/include)
    if (MINGW)
        set(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
        set(BUILD_SHARED_LIBS OFF)
        set(CMAKE_EXE_LINKER_FLAGS "-static")
        include_directories(C:/msys64/mingw64/include)
        include_directories(C:/msys64/mingw64/include/freetype2)
        include_directories(C:/msys64/mingw64/x86_64-w64-mingw32/include)
    endif (MINGW)
    if (MSVC)
        set(CMAKE_FIND_LIBRARY_SUFFIXES ".lib")
        #target_compile_options(EWOCvj2 PUBLIC /MT)
        target_compile_options(EWOCvj2 PUBLIC /MTd)
        target_link_options(EWOCvj2 PUBLIC /INCREMENTAL:NO)
        include_directories(C:/source/include)
        include_directories(C:/source/lib/vcpkg/installed/x64-windows-static/include)
    endif (MSVC)
endif (WIN32)
if (UNIX)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O0")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0")
    #include_directories(/usr/include/rtmidi)
    include_directories(/usr/include/libjpeg-turbo)
    include_directories(/opt/libjpeg-turbo/include)
    include_directories(/usr/include/freetype2)
    include_directories(/usr/include/ffmpeg)
    include_directories(/usr/include/rtmidi)
endif (UNIX)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/debug)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/release)

#set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /NODEFAULTLIB")

find_package( OpenGL )
target_link_libraries(EWOCvj2 PUBLIC ${OPENGL_LIBRARIES})
if (WIN32)
    if (MSVC)
        find_package( Boost REQUIRED COMPONENTS thread HINTS C:/source/lib/boost_1_78_0/lib64-msvc-14.3/cmake/Boost-1.78.0)
        target_link_libraries(EWOCvj2 PUBLIC ${Boost_FILESYSTEM_LIBRARY})
        target_link_libraries(EWOCvj2 PUBLIC ${Boost_THREAD_LIBRARY})
    endif (MSVC)
    if (MINGW)
        find_library(BOOSTSYS_LIBRARY boost_system-mt HINTS C:/source/lib C:/msys64/mingw64/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${BOOSTSYS_LIBRARY})
    endif (MINGW)
    find_library(AVCODEC_LIBRARY avcodec HINTS C:/source/lib C:/msys64/mingw64/lib)
    target_link_libraries(EWOCvj2 PUBLIC ${AVCODEC_LIBRARY})
    find_library(AVDEVICE_LIBRARY avdevice HINTS C:/source/lib C:/msys64/mingw64/lib)
    target_link_libraries(EWOCvj2 PUBLIC ${AVDEVICE_LIBRARY})
    find_library(AVFORMAT_LIBRARY avformat HINTS C:/source/lib C:/msys64/mingw64/lib)
    target_link_libraries(EWOCvj2 PUBLIC ${AVFORMAT_LIBRARY})
    find_library(AVUTIL_LIBRARY avutil HINTS C:/source/lib C:/msys64/mingw64/lib)
    target_link_libraries(EWOCvj2 PUBLIC ${AVUTIL_LIBRARY})
    find_library(AVFILTER_LIBRARY avfilter HINTS C:/source/lib C:/msys64/mingw64/lib)
    target_link_libraries(EWOCvj2 PUBLIC ${AVFILTER_LIBRARY})
    find_library(SWSCALE_LIBRARY swscale HINTS C:/source/lib C:/msys64/mingw64/lib)
    target_link_libraries(EWOCvj2 PUBLIC ${SWSCALE_LIBRARY})

    if (MSVC)
        find_library(DEVIL_LIBRARY DevIL HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${DEVIL_LIBRARY})
        find_library(FREEGLUT_LIBRARY freeglutd HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${FREEGLUT_LIBRARY})
        find_library(FREETYPE_LIBRARY freetyped HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${FREETYPE_LIBRARY})
        find_library(GLEW32_LIBRARY glew32d HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${GLEW32_LIBRARY})
        find_library(LO_LIBRARY liblo HINTS C:/source/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${LO_LIBRARY})
        find_library(OPENAL32_LIBRARY OpenAL32 HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${OPENAL32_LIBRARY})
        find_library(SDL2_LIBRARY SDL2 HINTS C:/source/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${SDL2_LIBRARY})
        find_library(SNAPPY_LIBRARY snappyd HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${SNAPPY_LIBRARY})
        find_library(TJPEG_LIBRARY turbojpeg HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${TJPEG_LIBRARY})
        find_library(RTMIDI_LIBRARY rtmidi HINTS C:/source/rtmidi-5.0.0/lib)
        target_link_libraries(EWOCvj2 PUBLIC optimized ${RTMIDI_LIBRARY})
        find_library(PNG_LIBRARY libpng16d HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${PNG_LIBRARY})
        find_library(BZ2_LIBRARY bz2d HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${BZ2_LIBRARY})
        find_library(ZLIB_LIBRARY zlibd HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${ZLIB_LIBRARY})
        find_library(TIFF_LIBRARY tiffd HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${TIFF_LIBRARY})
        find_library(JASPER_LIBRARY jasperd HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${JASPER_LIBRARY})
        #find_library(JPEG_LIBRARY jpeg HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        #target_link_libraries(EWOCvj2 PUBLIC ${JPEG_LIBRARY})
        find_library(LCMS2_LIBRARY lcms2 HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${LCMS2_LIBRARY})
        find_library(BROTLICOMMON_LIBRARY brotlicommon-static HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${BROTLICOMMON_LIBRARY})
        find_library(BROTLIDEC_LIBRARY brotlidec-static HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${BROTLIDEC_LIBRARY})
        find_library(BROTLIENC_LIBRARY brotlienc-static HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${BROTLIENC_LIBRARY})
        find_library(LZMA_LIBRARY lzma HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${LZMA_LIBRARY})
        find_library(OPENGL32_LIBRARY OpenGL32 HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${OPENGL32_LIBRARY})
        find_library(GLU32_LIBRARY GLU32 HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${GLU32_LIBRARY})
        find_library(HALF_LIBRARY Half-2_5_d HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${HALF_LIBRARY})
        find_library(IEX_LIBRARY Iex-2_5_d HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${IEX_LIBRARY})
        find_library(IMATH_LIBRARY Imath-2_5_d HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${IMATH_LIBRARY})
        find_library(IEXMATH_LIBRARY IexMath-2_5_d HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${IEXMATH_LIBRARY})
        find_library(ILMTHREAD_LIBRARY IlmThread-2_5_d HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${ILMTHREAD_LIBRARY})
        find_library(ILMIMF_LIBRARY IlmImf-2_5_d HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${ILMIMF_LIBRARY})
        find_library(ILMIMFUTIL_LIBRARY IlmImfUtil-2_5_d HINTS C:/source/lib/vcpkg/installed/x64-windows-static/debug/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${ILMIMFUTIL_LIBRARY})
    endif (MSVC)
    if (MINGW)
        find_library(DEVIL_LIBRARY IL HINTS C:/source/lib C:/msys64/mingw64/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${DEVIL_LIBRARY})
        find_library(FREEGLUT_LIBRARY freeglut HINTS C:/source/lib C:/msys64/mingw64/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${FREEGLUT_LIBRARY})
        find_library(FREETYPE_LIBRARY freetype HINTS C:/source/lib C:/msys64/mingw64/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${FREETYPE_LIBRARY})
        find_library(GLEW32_LIBRARY glew32 HINTS C:/source/lib C:/msys64/mingw64/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${GLEW32_LIBRARY})
        find_library(LO_LIBRARY lo HINTS C:/source/lib C:/msys64/mingw64/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${LO_LIBRARY})
        find_library(OPENAL32_LIBRARY openal HINTS C:/source/lib C:/msys64/mingw64/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${OPENAL32_LIBRARY})
        find_library(SDL2_LIBRARY SDL2 HINTS C:/source/lib C:/msys64/mingw64/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${SDL2_LIBRARY})
        find_library(SNAPPY_LIBRARY snappy HINTS C:/source/lib C:/msys64/mingw64/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${SNAPPY_LIBRARY})
        find_library(TJPEG_LIBRARY turbojpeg HINTS /opt/libjpeg-turbo/lib64 C:/source/lib C:/msys64/mingw64/lib)
        target_link_libraries(EWOCvj2 PUBLIC ${TJPEG_LIBRARY})
        find_library(RTMIDI_LIBRARY rtmidi HINTS C:/source/lib C:/msys64/mingw64/lib)
        target_link_libraries(EWOCvj2 PUBLIC optimized ${RTMIDI_LIBRARY})
    endif (MINGW)
endif (WIN32)

if (UNIX)
    find_library(BOOSTS_LIBRARY boost_system HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC debug ${BOOSTS_LIBRARY})
    find_library(AVCODEC_LIBRARY avcodec HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${AVCODEC_LIBRARY})
    find_library(AVDEVICE_LIBRARY avdevice HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${AVDEVICE_LIBRARY})
    find_library(AVFORMAT_LIBRARY avformat HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${AVFORMAT_LIBRARY})
    find_library(AVUTIL_LIBRARY avutil HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${AVUTIL_LIBRARY})
    find_library(SWSCALE_LIBRARY swscale HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${SWSCALE_LIBRARY})
    find_library(SWRESAMPLE_LIBRARY swresample HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${SWRESAMPLE_LIBRARY})
    find_library(AVFILTER_LIBRARY avfilter HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${AVFILTER_LIBRARY})

    find_library(DEVIL_LIBRARY IL HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${DEVIL_LIBRARY})
    find_library(FREEGLUT_LIBRARY glut HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${FREEGLUT_LIBRARY})
    find_library(FREETYPE_LIBRARY freetype HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${FREETYPE_LIBRARY})
    find_library(GLEW32_LIBRARY GLEW HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${GLEW32_LIBRARY})
    find_library(LO_LIBRARY lo HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${LO_LIBRARY})
    find_library(OPENAL32_LIBRARY openal HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${OPENAL32_LIBRARY})
    find_library(SDL2_LIBRARY SDL2 HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${SDL2_LIBRARY})
    find_library(SNAPPY_LIBRARY snappy HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${SNAPPY_LIBRARY})
    find_library(TJPEG_LIBRARY turbojpeg HINTS /opt/libjpeg-turbo/lib64 /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${TJPEG_LIBRARY})
    find_library(RTMIDI_LIBRARY rtmidi HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${RTMIDI_LIBRARY})
    find_library(ALSA_LIBRARY asound HINTS /usr/lib /usr/lib64 /usr/local/lib /usr/local/lib64)
    target_link_libraries(EWOCvj2 PUBLIC ${ALSA_LIBRARY})
endif (UNIX)

if (WIN32)
    find_library(RTMIDID_LIBRARY rtmidid HINTS C:/source/rtmidi-5.0.0/lib C:/msys64/mingw64/lib)
    target_link_libraries(EWOCvj2 PUBLIC debug ${RTMIDID_LIBRARY})
    find_library(WINMM_LIBRARY winmm HINTS C:/source/lib C:/msys64/mingw64/x86_64-w64-mingw32/lib)
    target_link_libraries(EWOCvj2 PUBLIC ${WINMM_LIBRARY})
    find_library(IMM32_LIBRARY imm32 HINTS C:/source/lib C:/msys64/mingw64/x86_64-w64-mingw32/lib)
    target_link_libraries(EWOCvj2 PUBLIC ${IMM32_LIBRARY})
    find_library(CFGMGR32_LIBRARY cfgmgr32 HINTS C:/source/lib C:/msys64/mingw64/x86_64-w64-mingw32/lib)
    target_link_libraries(EWOCvj2 PUBLIC ${CFGMGR32_LIBRARY})
    find_library(SETUPAPI_LIBRARY setupapi HINTS C:/source/lib C:/msys64/mingw64/x86_64-w64-mingw32/lib)
    target_link_libraries(EWOCvj2 PUBLIC ${SETUPAPI_LIBRARY})
    find_library(VERSION_LIBRARY Version HINTS C:/source/lib C:/msys64/mingw64/x86_64-w64-mingw32/lib)
    target_link_libraries(EWOCvj2 PUBLIC ${VERSION_LIBRARY})
    find_library(SHCORE_LIBRARY shcore HINTS C:/source/lib C:/msys64/mingw64/x86_64-w64-mingw32/lib)
    target_link_libraries(EWOCvj2 PUBLIC ${SHCORE_LIBRARY})
    find_library(WS2_LIBRARY ws2_32 HINTS C:/source/lib C:/msys64/mingw64/x86_64-w64-mingw32/lib)
    target_link_libraries(EWOCvj2 PUBLIC ${WS2_LIBRARY})
endif (WIN32)
if (MSVC)
    find_library(SHCORE_LIBRARY shcore HINTS C:/source/lib C:/msys64/mingw64/x86_64-w64-mingw32/lib)
    target_link_libraries(EWOCvj2 PUBLIC ${SHCORE_LIBRARY})
    find_library(LSTDIO_LIBRARY legacy_stdio_definitions HINTS)
    target_link_libraries(EWOCvj2 PUBLIC ${LSTDIO_LIBRARY})
endif (MSVC)
if (MINGW)
    find_library(OPENGL_LIBRARY opengl32 HINTS C:/source/lib C:/msys64/mingw64/x86_64-w64-mingw32/lib)
    target_link_libraries(EWOCvj2 PUBLIC debug ${OPENGL_LIBRARY})
endif (MINGW)

if (UNIX)
    find_library(PTHREAD_LIBRARY pthread HINTS)
    target_link_libraries(EWOCvj2 PUBLIC ${PTHREAD_LIBRARY})
    find_library(X11_LIBRARY X11 HINTS)
    target_link_libraries(EWOCvj2 PUBLIC ${X11_LIBRARY})
    find_library(GL_LIBRARY GL HINTS)
    target_link_libraries(EWOCvj2 PUBLIC ${GL_LIBRARY})
    find_library(Z_LIBRARY z HINTS)
    target_link_libraries(EWOCvj2 PUBLIC ${Z_LIBRARY})
endif (UNIX)


if (UNIX)
    install(TARGETS EWOCvj2 RUNTIME DESTINATION bin)
    install(CODE "execute_process(COMMAND xdg-icon-resource install --context mimetype --novendor --size 256 --mode user application-ewocvj2-bin.png)")
    install(CODE "execute_process(COMMAND xdg-icon-resource install --context mimetype --novendor --size 256 --mode user application-ewocvj2-deck.png)")
    install(CODE "execute_process(COMMAND xdg-icon-resource install --context mimetype --novendor --size 256 --mode user application-ewocvj2-layer.png)")
    install(CODE "execute_process(COMMAND xdg-icon-resource install --context mimetype --novendor --size 256 --mode user application-ewocvj2-mix.png)")
    install(CODE "execute_process(COMMAND xdg-icon-resource install --context mimetype --novendor --size 256 --mode user application-ewocvj2-project.png)")
    install(CODE "execute_process(COMMAND xdg-icon-resource install --context mimetype --novendor --size 256 --mode user application-ewocvj2-shelf.png)")
    install(CODE "execute_process(COMMAND xdg-icon-resource install --context mimetype --novendor --size 256 --mode user application-ewocvj2-state.png)")
    install(FILES ewocvj2-*.xml DESTINATION share/mime/application)
    install(CODE "execute_process(COMMAND update-mime-database /usr/share/mime)")
    install(DIRECTORY DESTINATION share/ewocvj2)
    install(FILES shader.* DESTINATION share/ewocvj2)
    install(FILES background.jpg DESTINATION share/ewocvj2)
    install(FILES splash.jpeg DESTINATION share/ewocvj2)
    install(FILES lock.png DESTINATION share/ewocvj2)
    install(FILES ../expressway.ttf DESTINATION share/fonts/truetype/)
endif (UNIX)
